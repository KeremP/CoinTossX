plugins {
    id 'org.springframework.boot' version '1.4.3.RELEASE'
    id 'war'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.giffing.wicket.spring.boot.starter:wicket-spring-boot-starter:0.0.10'
    compile 'org.apache.wicket:wicket-extensions:7.2.0'
    compile 'org.springframework.boot:spring-boot-starter-web:1.4.3.RELEASE'
    compile 'org.apache.wicket:wicket-bean-validation:7.2.0'
    compile 'com.googlecode.wicked-charts:wicked-charts-wicket7:2.0.0'
    compile 'org.apache.commons:commons-math3:3.2'
    compile 'org.apache.commons:commons-csv:1.1'
    compile project(':ClientSimulator')
    compile group: 'org.mapdb', name: 'mapdb', version: '3.0.2'


    testCompile group: 'junit', name: 'junit', version: '4.11'
}

sourceSets.main.resources.srcDir 'src/main/java'

bootWar {
    mainClass = 'wicket.WicketApplication'
    launchScript()
}

springBoot {
    mainClass = 'wicket.WicketApplication'
}

def myProps = new Properties()
file(rootProject.projectDir.absolutePath + '/' + project.envProp).withInputStream{
    myProps.load(it);
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.properties'
        filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: myProps)
    }
}


